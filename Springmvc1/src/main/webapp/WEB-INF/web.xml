<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
  <display-name>Archetype Created Web Application</display-name>
  <!-- 如果配置springmvc的servlet的时候，使用的路径是"/* "，它会拦截所有请求，
  导致静态资源在默认情况下不能访问，所以要加上这一段，允许访问jsp。 并且必须加在springmvc的servlet之前-->
  <!--把静态资源交给tomcat的defaultSerlvet处理
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.html</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.png</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.jsp</url-pattern>
  </servlet-mapping> -->

  <!-- 加载spring的配置文件-->
  <!-- ContextLoaderListener监听器：监听Web容器，一旦启动，自动装配ApplicationContext的配置信息 -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!-- 告知ApplicationContext的位置在哪，如果不配置，默认去/WEB-INF目录下找 -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:applicationContext.xml</param-value>
  </context-param>


  <!-- 注册Spring核心编码过滤器。注意一点:要配置在所有过滤器的前面 -->
  <filter>
    <filter-name>CharacterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>CharacterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>





  <!-- 注册springmvc核心控制器  -->
  <servlet>
    <servlet-name>DispatcherServlet1</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!-- 如果要使用默认加载方式,满足以下2个条件:
                  默认加载必须规范：
                  * 文件命名：servlet-name-servlet.xml====springmvc.xml
                  * 路径规范：必须在WEB-INF目录下面
                  就可以不用写<init-param></init-param>
            -->
    <!-- 通知DispatcherServlet去指定的目录加载springmvc.xml文件  -->
    <init-param>
      <!-- 这里的内容contextConfigLocation不能修改，它不想其他name属性可以自己命名，它是容器内在属性  -->
      <param-name>contextConfigLocation</param-name>
      <!-- WEB项目时这些配置文件都在classes目录下，classpath就是让它去这里找  -->
      <param-value>classpath:SpringMvc-1.xml</param-value>
    </init-param>
    <!--服务器启动就一起初始化,数值越小,优先级越高
           服务器启动的时候就加载bean类（Controller）
       -->
<!--    <load-on-startup>1</load-on-startup>-->
  </servlet>




  <servlet-mapping>
    <servlet-name>DispatcherServlet1</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>

</web-app>
